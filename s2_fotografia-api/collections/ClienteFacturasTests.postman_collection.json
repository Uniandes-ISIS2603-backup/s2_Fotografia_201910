{
	"info": {
		"_postman_id": "03fda92d-2b09-4924-8671-8340417f2bc6",
		"name": "ClienteFacturasTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "78601521-f08a-4e97-9bf6-e9a914004602",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_cl\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\n\"login\" : \"ramonmentr\",\n\"nombre\" : \"Ramon Mendez\",\n\"correo\" : \"rmen@gmail.com\",\n\"contrasena\" : \"ramen9872\"\n\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear cliente 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "37fb1506-c7de-45b1-863b-00bec26fd2e6",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_cl2\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"login\" : \"germand\",\n\"nombre\" : \"German Diaz\",\n\"correo\": \"gd@hotmail.com\",\n\"contrasena\" : \"gd54321344\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una factura",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "19938778-de6a-445c-9df0-d649c1d687d4",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_fa\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"numero\" : 22,\n\"precio\" :  34.0,\n\"fechaCompra\" : \"2018-08-10T00:00:00-05:00\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/facturas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"facturas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear factura 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb8094bd-7d8f-40de-9075-549fed16a968",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_fa2\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"numero\" : 33,\n\"precio\" :  67.0,\n\"fechaCompra\" : \"2019-02-21T00:00:00-02:00\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/facturas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"facturas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar una factura a un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "928d4fa6-7fc0-4443-a233-d9e9bee4761e",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes/{{new_id_cl}}/facturas/{{new_id_fa}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes",
						"{{new_id_cl}}",
						"facturas",
						"{{new_id_fa}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia un libro a una editorial en la aplicación. \r\n\r\nSe envía el Id de la editorial y el del libro a asociar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Agregar una factura que no existe a un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c96675bf-923e-486c-809c-00b21626a440",
						"exec": [
							"tests[\"No agrega una factura con un id de un cliente que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /facturas/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes/{{new_id_cl2}}/facturas/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes",
						"{{new_id_cl2}}",
						"facturas",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia un libro que no existe a una editorial en la aplicación. \r\n\r\nSe envía el Id de la editorial y el del libro a asociar en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /books/0 no existe.\".\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener las facturas de un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0f40c17f-d786-4cc7-a506-809d7089c41e",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get all\"] = responseCode.code === 200;",
							"tests[\"Cliente count with facturas\"] = data.length >= 0;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes/{{new_id_cl}}/facturas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes",
						"{{new_id_cl}}",
						"facturas"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta los libros de una editorial en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id de la editorial y el del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener una factura de un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb5201f8-e084-4a67-a336-861c386fef34",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes/{{new_id_cl}}/facturas/{{new_id_fa}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes",
						"{{new_id_cl}}",
						"facturas",
						"{{new_id_fa}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro de una editorial en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id de la editorial y del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener una factura no asociado de una editorial Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a76e08fa-81d0-4f09-b339-fe3859c0337f",
						"exec": [
							"tests[\"No se puede obtener una factura que no esta asociada\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"La factura no está asociado al cliente\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes/{{new_id_cl2}}/facturas/{{new_id_fa}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes",
						"{{new_id_cl2}}",
						"facturas",
						"{{new_id_fa}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro que no esta asociado a una editorial en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El libro no está asociado a la editorial\".\r\n\r\n**Código http esperado: 412**"
			},
			"response": []
		},
		{
			"name": "Obtener una factura que no existe de un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a4fe6019-e9ca-41f3-b2e5-bd3244f6cce9",
						"exec": [
							"tests[\"No se puede obtener una factura que no existe\"] = responseCode.code === 404;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes/{{new_id_cl}}/facturas/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes",
						"{{new_id_cl}}",
						"facturas",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro que no existe de una editorial en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Asociar facturas a un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a7f75e8e-b8e0-4156-8d66-16942aaade2c",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \n\"numero\" : 22,\n\"precio\" :  34.0,\n\"fechaCompra\" : \"2018-08-10T00:00:00-05:00\",\n\"cliente\" :{\n\t\"id\": {{new_id_cl2}},\n\t\"login\" : \"germand\",\n\"nombre\" : \"German Diaz\",\n\"correo\": \"gd@hotmail.com\",\n\"contrasena\" : \"gd54321344\"\n\t\n},\n\"id\":{{new_id_fa}}\n    },\n    {\n       \"numero\" : 22,\n\"precio\" :  34.0,\n\"fechaCompra\" : \"2018-08-10T00:00:00-05:00\",\n\"cliente\" :{\n\t\"id\": {{new_id_cl2}},\n\t\"login\" : \"germand\",\n\"nombre\" : \"German Diaz\",\n\"correo\": \"gd@hotmail.com\",\n\"contrasena\" : \"gd54321344\"\n\t\n},\n\"id\":{{new_id_fa2}}\n    }\n]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes/{{new_id_cl2}}/facturas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes",
						"{{new_id_cl2}}",
						"facturas"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza la lista de libros una editorial existente.\r\n\r\nSe envía el Id ne la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Asociar facturas que no existen a un Cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f16c4b46-7d21-4856-be43-d169cd91bf8f",
						"exec": [
							"tests[\"No se pueden asociar las facturas ya que estas no existen\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /facturas/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n    \"numero\" : 22,\n\"precio\" :  34.0,\n\"fechaCompra\" : \"2018-08-10T00:00:00-05:00\",\n\"id\": 0\n}\n]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes/{{new_id_cl2}}/facturas",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes",
						"{{new_id_cl2}}",
						"facturas"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza la lista de una editorial existente con libros que no existen. \r\n\r\nSe envía el Id en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /books/0 no existe.\".\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Borrar una factura",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2ec74fba-bc15-4973-99bd-0c1a86a28a2e",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/facturas/{{new_id_fa}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"facturas",
						"{{new_id_fa}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un libro. Se envía el id del libro creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar una factura 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2ec74fba-bc15-4973-99bd-0c1a86a28a2e",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/facturas/{{new_id_fa2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"facturas",
						"{{new_id_fa2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un libro. Se envía el id del libro creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a13769a8-7fd6-4188-b4ab-883140dfb90d",
						"exec": [
							"tests[\"Status code is 204\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes/{{new_id_cl}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes",
						"{{new_id_cl}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra una editorial. Se envía el id de la editorial creada en la primera petición.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un cliente 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a13769a8-7fd6-4188-b4ab-883140dfb90d",
						"exec": [
							"tests[\"Status code is 204\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s2_fotografia-api/api/clientes/{{new_id_cl2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s2_fotografia-api",
						"api",
						"clientes",
						"{{new_id_cl2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra una editorial. Se envía el id de la editorial creada en la primera petición.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		}
	]
}